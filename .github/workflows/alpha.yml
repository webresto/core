name: Publish Package to npmjs
on:
  push:
    branches:
      - alpha
      - next
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      # waiting https://github.com/ds300/patch-package/issues/339
      - run: npm install 2>&1 || true && npm run test:init 2>&1 || true && npm run test
      
      # resolve version
      - run: set -x; BRANCH=${GITHUB_REF##*/}; PACKAGE=$(cat package.json | jq -r '.["name"]'); VERNPM=$(curl -sS https://registry.npmjs.org/"$PACKAGE" | jq -r '.["dist-tags"].'"$BRANCH"'); VERLOC=$(cat package.json | jq -r '.["version"]'); if [[ -z "$VERNPM" ]]; then VERNPM="0"; else RELEASE=$(echo "$VERNPM" | awk -F'-dev.' '{print $2}'); if [[ -z "$RELEASE" ]]; then RELEASE="0"; fi; RELEASE=$((RELEASE + 1)); VERNPM="0.$RELEASE"; fi; VEROUT="2.0.0-dev.$VERNPM"; jq -r --arg VEROUT "$VEROUT" '.version = $VEROUT' package.json > /tmp/package.json && mv /tmp/package.json ./package.json
#      - run: set -x; BRANCH=${GITHUB_REF##*/} PACKAGE=$(cat package.json | jq -r '.["name"]')  VERNPM=$(curl https://registry.npmjs.org/$PACKAGE | jq -r '.["dist-tags"].'${BRANCH} | awk -F. -v OFS=. '{$NF += 1 ; print}')   VERLOC=$(cat package.json | jq -r '.["version"]')   VEROUT=$(printf "$VERNPM\n$VERLOC\n" | sort -V -r | awk 'NR==1 {print; exit}') &&  jq -r '.version = "'${VEROUT}'-'${BRANCH}'"' package.json > /tmp/package.json && mv /tmp/package.json ./package.json
      - run: npm publish --tag ${GITHUB_REF##*/}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
