'use strict';
// sql template autogenerated by gen-db-migrates

var async = require('async')
var dbm;
var type;
var seed;

/**
* We receive the dbmigrate dependency from dbmigrate initially.
* This enables us to not have to rely on NODE_PATH.
*/
exports.setup = function(options, seedLink) {
  dbm = options.dbmigrate;
  type = dbm.dataType;
  seed = seedLink;
};

exports.up = function (db, callback) {
  async.series([
    (cb) => db.addColumn('bonusprogram', 'externalId', {"type":"text"}, cb),
(cb) => db.addColumn('order', 'promotionCode', {"type":"int"}, cb),
(cb) => db.addColumn('order', 'promotionCodeString', {"type":"text","notNull":false}, cb),
(cb) => db.addColumn('order', 'promotionCodeCheckValidTill', {"type":"text","notNull":false}, cb),
(cb) => db.createTable('promotioncode', {
    columns: {
    "id": {
        "type": "text",
        "primaryKey": true
    },
    "externalId": {
        "type": "text",
        "notNull": false
    },
    "type": {
        "type": "text"
    },
    "prefix": {
        "type": "text",
        "notNull": false
    },
    "startDate": {
        "type": "text"
    },
    "stopDate": {
        "type": "text"
    },
    "workTime": {
        "type": "json"
    },
    "code": {
        "type": "text",
        "notNull": false
    },
    "generateConfig": {
        "type": "json"
    },
    "customData": {
        "type": "json"
    },
    "createdAt": {
        "type": "bigint"
    },
    "updatedAt": {
        "type": "bigint"
    }
},
    ifNotExists: true
  }, cb),
(cb) => db.addColumn('userbonusprogram', 'externalId', {"type":"text"}, cb),
(cb) => db.addColumn('userbonusprogram', 'externalCustomerId', {"type":"text"}, cb),
(cb) => db.addColumn('userbonustransaction', 'comment', {"type":"text"}, cb),
(cb) => db.createTable('promotion_promotioncode__promotioncode_promotion', {
    columns: {
    "id": {
        "type": "int",
        "autoIncrement": true
    },
    "promotion_promotionCode": {
        "type": "string"
    },
    "promotioncode_promotion": {
        "type": "string"
    }
},
    ifNotExists: true
  }, cb),

  ], callback);
}

exports.down = function(db) {
  return null;
};

exports._meta = {
  "version": 1
};
